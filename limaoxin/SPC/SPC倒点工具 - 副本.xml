<?xml version="1.0" encoding="UTF-8"?>
<panel version="14">
 <properties>
  <prop name="Name">
   <prop name="en_US.utf8"></prop>
   <prop name="zh_CN.utf8"></prop>
  </prop>
  <prop name="Size">1150 597</prop>
  <prop name="BackColor">_3DFace</prop>
  <prop name="RefPoint">30 56</prop>
  <prop name="InitAndTermRef">True</prop>
  <prop name="SendClick">False</prop>
  <prop name="RefFileName"></prop>
  <prop name="DPI">96</prop>
  <prop name="layoutType">None</prop>
 </properties>
 <shapes>
  <shape Name="PUSH_BUTTON1" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">1</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">20 20</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">0</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="zh_CN.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Noto Sans,-1,16,5,50,0,0,0,0,0</prop>
     <prop name="zh_CN.utf8">Noto Sans,-1,16,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">20 16</prop>
    <prop name="Size">191 30</prop>
    <prop name="BorderStyle">Styled</prop>
    <prop name="Text">
     <prop name="en_US.utf8">PUSH_BUTTON1</prop>
     <prop name="zh_CN.utf8">开始倒点和转换格式</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main(mapping event)
{
  msg.text = &quot;&quot;;
 string str;
 string path = getPath(DATA_REL_PATH) + &quot;Reportv2/config/menu-BJJD.txt&quot;;
 fileToString(path, str);

 dyn_string items = strsplit(str, &quot;\n&quot;);

 dynRemove(items,1);


 for(int i = 1; i &lt;= dynlen(items); i++)
 {
   dyn_string item = strsplit(items[i],&quot;\t&quot;);
   if(dynlen(item) != 18)
   {
     DebugN(&quot;items表格有误！Row&quot; + i);
     msg.append( path + &quot; Error, column !=18 ,line &quot; + i);
     return;
   }
 }


 dyn_mapping m1, m2, m3, m4,m5;
 mapping m;
 string L1,L2,L3;

 for(int i = dynlen(items); i &gt;= 1; i--)
 {
   dyn_string item = strsplit(items[i],&quot;\t&quot;);
   if(item[4] != &quot;&quot;) // DPE 菜单
   {
     string dpe = item[4];
     if(dpExists(dpe))
     {

       msg.append(dpe + &quot;--OK&quot;);
     }
     else
     {

       msg.append(&quot;&lt;font color = red&gt;&quot; + dpe + &quot;--DPE不存在&lt;/font&gt;&quot; );

     }

     dynInsertAt(m4, makeMapping(  &quot;text&quot;, item[4],
                                   &quot;selectable&quot;, false ,
                                   &quot;checkable&quot;, true,
                                   &quot;LOW_SPECIFICATION&quot;, item[5],
                                   &quot;force_LCL&quot; , item[6],
                                   &quot;warmDown&quot; , item[7],
                                   &quot;MIDDLE_SPECIFICATION&quot;, item[8],
                                   &quot;force_Middle&quot; , item[8],
                                   &quot;warmUp&quot; , item[9],
                                   &quot;force_UCL&quot; , item[10],
                                   &quot;HIGH_SPECIFICATION&quot;, item[11],
                                   &quot;visibleMin&quot;, item[12],
                                   &quot;visibleMax&quot;, item[13],


                                   &quot;trendMin&quot;, item[14],
                                   &quot;trendMax&quot;, item[15],
                                   &quot;sysId&quot;, item[16],
                                   &quot;uuid&quot;,  createUuid() ,
                                   &quot;state&quot;, makeMapping(&quot;disabled&quot;,false )), 1);
     if(item[3] != &quot;&quot;) // 侦测点 菜单
     {
       dynInsertAt(m3, makeMapping(  &quot;text&quot;, item[3],
                                     &quot;selectable&quot;, false,
                                     &quot;checkable&quot;, true,
                                     &quot;uuid&quot;,  createUuid() ,
                                     &quot;nodes&quot;, m4 ), 1);
         dynClear(m4);
       if(item[2] != &quot;&quot;) // 子系统 菜单
       {
         dynInsertAt(m2, makeMapping(  &quot;text&quot;, item[2],
                                       &quot;selectable&quot;, false ,
                                       &quot;checkable&quot;, true,
                                       &quot;uuid&quot;,  createUuid() ,
                                       &quot;nodes&quot;, m3), 1);
         dynClear(m3);
         if(item[1] != &quot;&quot;) // 部门 菜单
         {
           dynInsertAt(m1,  makeMapping(  &quot;text&quot;, item[1],
                                          &quot;selectable&quot;, false ,
                                          &quot;checkable&quot;, true,
                                          &quot;sysId&quot;, item[10],
                                          &quot;uuid&quot;,  createUuid() ,
                                          &quot;nodes&quot;, m2 ), 1);
           dynClear(m2);
         }
       }
     }

   }
 }


  string pathJson = getPath(DATA_REL_PATH) + &quot;ReportV2/config/menuJsonSPC预检查.txt&quot;;
  file f =   fopen(pathJson, &quot;w+&quot;);
  fputs(jsonEncode(m1 ,false),f);
  fflush(f);
  fclose(f);

  return jsonEncode(m1 ,false);
}]]></script>
   </events>
  </shape>
  <shape Name="msg" shapeType="TEXT_EDIT" layerId="0">
   <properties>
    <prop name="serialId">4</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">20 62</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">2</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="zh_CN.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Noto Sans,-1,16,5,50,0,0,0,0,0</prop>
     <prop name="zh_CN.utf8">Noto Sans,-1,16,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">20 62</prop>
    <prop name="Size">1071 491</prop>
   </properties>
  </shape>
  <shape Name="PUSH_BUTTON3" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">5</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">240 20</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">3</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="zh_CN.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Noto Sans,-1,16,5,50,0,0,0,0,0</prop>
     <prop name="zh_CN.utf8">Noto Sans,-1,16,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">240 16</prop>
    <prop name="Size">121 30</prop>
    <prop name="BorderStyle">Styled</prop>
    <prop name="Text">
     <prop name="en_US.utf8">PUSH_BUTTON3</prop>
     <prop name="zh_CN.utf8">帮助</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main(mapping event)
{
  msg.text = &quot;&quot;;
   string str;
   string path = getPath(DATA_REL_PATH) + &quot;Reportv2/config/SOP说明.txt&quot;;
   fileToString(path, str);
   msg.text = str;


}]]></script>
   </events>
  </shape>
  <shape Name="PUSH_BUTTON4" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">7</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">470.0000000000001 20</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">4</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="zh_CN.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Noto Sans,-1,16,5,50,0,0,0,0,0</prop>
     <prop name="zh_CN.utf8">Noto Sans,-1,16,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">470.0000000000001 16</prop>
    <prop name="Size">341 30</prop>
    <prop name="BorderStyle">Styled</prop>
    <prop name="Text">
     <prop name="en_US.utf8">PUSH_BUTTON1</prop>
     <prop name="zh_CN.utf8">检查SPC点位 MINUTE, HOUR 属性</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main(mapping event)
{
  msg.text = &quot;&quot;;
 string str;
 string path = getPath(DATA_REL_PATH) + &quot;Reportv2/config/menu-BJJD.txt&quot;;
 fileToString(path, str);

 dyn_string items = strsplit(str, &quot;\n&quot;);

 dynRemove(items,1);


 for(int i = 1; i &lt;= dynlen(items); i++)
 {
   dyn_string item = strsplit(items[i],&quot;\t&quot;);
   if(dynlen(item) != 10)
   {
     DebugN(&quot;items表格有误！Row&quot; + i);
     // return path + &quot; Error, column !=9 ,line &quot; + i;
   }
 }


 dyn_mapping m1, m2, m3, m4;
 mapping m;
 string L1,L2,L3;

 for(int i = dynlen(items); i &gt;= 1; i--)
 {
   dyn_string item = strsplit(items[i],&quot;\t&quot;);
   if(item[4] != &quot;&quot;) // DPE 菜单
   {
     string dpe = item[4];
     if(dpExists(dpe))
     {

       msg.append(dpe + &quot;--存在&quot; + i + &quot;/&quot; + dynlen(items) );
       string minuteDpe = dpe;
       string hourDpe = dpe;
       strreplace(minuteDpe, &quot;.VALUE&quot;, &quot;.MINUTE.VALUE&quot;);
       strreplace(hourDpe, &quot;.VALUE&quot;, &quot;.HOUR.VALUE&quot;);

         msg.append( dpExists(minuteDpe)? minuteDpe + &quot; - Ok&quot;: minuteDpe+&quot; ------------ No&quot;);
         msg.append( dpExists(hourDpe)? hourDpe + &quot; - Ok&quot;: hourDpe+&quot; ------------No&quot;);
         msg.append(  &quot;-----------------------&quot;);

       int dpFunctionInterval;
       dpGet( minuteDpe + &quot;:_dp_fct.._interval&quot;, dpFunctionInterval);
       if(dpFunctionInterval != 60)
       {

         dpSet( minuteDpe + &quot;:_dp_fct.._interval&quot; , 60);
         msg.append(  minuteDpe + &quot;    any -&gt;60&quot;);
         msg.append(  &quot;   &quot;);
       }

       dpGet( hourDpe + &quot;:_dp_fct.._interval&quot;, dpFunctionInterval);
       if( dpFunctionInterval != 3600 )
       {

         dpSet( hourDpe + &quot;:_dp_fct.._interval&quot; , 3600 );
         msg.append(  hourDpe + &quot;    any -&gt;3600&quot;);
         msg.append(  &quot;   &quot;);
       }

       dyn_int _stat_type;
       dpGet( minuteDpe + &quot;:_dp_fct.._stat_type&quot;, _stat_type  );

       if( _stat_type[1] != SF_SAMPLE )
       {

         dpSetWait( minuteDpe + &quot;:_dp_fct.._stat_type&quot; , makeDynInt(SF_SAMPLE) );
         msg.append(  minuteDpe + &quot; - &quot; + _stat_type[1]  +  &quot;-    _stat_type -&gt;SF_SAMPLE&quot;);
         msg.append(  &quot;   &quot;);
       }

       dpGet( hourDpe + &quot;:_dp_fct.._stat_type&quot;, _stat_type  );

       if( _stat_type[1] != SF_SAMPLE )
       {

         dpSetWait( hourDpe + &quot;:_dp_fct.._stat_type&quot; , makeDynInt(SF_SAMPLE)  );
         msg.append(  hourDpe + &quot; - &quot; + _stat_type[1] + &quot;-    _stat_type -&gt;SF_SAMPLE&quot;);
         msg.append(  &quot;   &quot;);
       }
     }
     else
     {

       msg.append(dpe + &quot;--DPE不存在&quot; );

     }

   }
 }


}]]></script>
   </events>
  </shape>
 </shapes>
</panel>
